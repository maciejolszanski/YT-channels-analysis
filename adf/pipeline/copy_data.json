{
	"name": "copy_data",
	"properties": {
		"activities": [
			{
				"name": "Copy Files",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get FileNames To Copy",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@variables('files_to_copy')",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "Copy YT data",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "JsonSource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true,
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "JsonReadSettings"
									}
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "JsonWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "yt_input_file",
									"type": "DatasetReference",
									"parameters": {
										"directory": {
											"value": "@pipeline().parameters.directory",
											"type": "Expression"
										},
										"filename": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "yt_output_data",
									"type": "DatasetReference",
									"parameters": {
										"filename": {
											"value": "@concat(join(take(split(item(), '-'), 6), '-'),'.json')",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "Get Input FileNames",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "yt_input_directory",
						"type": "DatasetReference",
						"parameters": {
							"directory": {
								"value": "@pipeline().parameters.directory",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "JsonReadSettings"
					}
				}
			},
			{
				"name": "Lookup Old Watermark",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"dataset": {
						"referenceName": "yt_watermark",
						"type": "DatasetReference",
						"parameters": {
							"directory": {
								"value": "@pipeline().parameters.directory",
								"type": "Expression"
							}
						}
					}
				}
			},
			{
				"name": "Set Old Watermark",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Lookup Old Watermark",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "old_watermark",
					"value": {
						"value": "@activity('Lookup Old Watermark').output.firstRow.watermark",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Get FileNames To Copy",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Input FileNames",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Set Old Watermark",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Input FileNames').output.childItems",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "If Later Than Old Watermark",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@if(greater(length(split(item().name, '-')), 2),\ngreater(ticks(formatDateTime(join(take(skip(split(item().name, '-'), 3), 3), '-'), 'yyyy-MM-dd')), ticks(formatDateTime(variables('old_watermark'), 'yyyy-MM-dd'))),\nbool(0)\n)",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "Append Files To Copy",
										"type": "AppendVariable",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"variableName": "files_to_copy",
											"value": {
												"value": "@item().name",
												"type": "Expression"
											}
										}
									}
								]
							}
						},
						{
							"name": "If Later Than New Watermark",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@if(greater(length(split(item().name, '-')), 2),\ngreater(ticks(formatDateTime(join(take(skip(split(item().name, '-'), 3), 3), '-'), 'yyyy-MM-dd')), ticks(formatDateTime(variables('new_watermark'), 'yyyy-MM-dd'))),\nbool(0)\n)",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "Set New Watermark",
										"type": "SetVariable",
										"dependsOn": [],
										"policy": {
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"variableName": "new_watermark",
											"value": {
												"value": "@formatDateTime(join(take(skip(split(item().name, '-'), 3), 3), '-'), 'yyyy-MM-dd')\n\n",
												"type": "Expression"
											}
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "Init New Watermark",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Lookup Old Watermark",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "new_watermark",
					"value": {
						"value": "@activity('Lookup Old Watermark').output.firstRow.watermark",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Update watermark",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "Copy Files",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "Update_watermark",
						"type": "DataFlowReference",
						"parameters": {
							"new_watermark": {
								"value": "'@{variables('new_watermark')}'",
								"type": "Expression"
							}
						},
						"datasetParameters": {
							"LoadOldWatermark": {
								"directory": {
									"value": "@pipeline().parameters.directory",
									"type": "Expression"
								}
							},
							"SaveNewWatermark": {
								"directory": {
									"value": "@pipeline().parameters.directory",
									"type": "Expression"
								}
							}
						}
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			}
		],
		"parameters": {
			"directory": {
				"type": "string"
			}
		},
		"variables": {
			"old_watermark": {
				"type": "String"
			},
			"new_watermark": {
				"type": "String"
			},
			"files_to_copy": {
				"type": "Array"
			},
			"current_item": {
				"type": "String"
			},
			"dates": {
				"type": "Array"
			},
			"temp": {
				"type": "String"
			}
		},
		"annotations": []
	}
}